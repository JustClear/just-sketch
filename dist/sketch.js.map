{"version":3,"file":"sketch.js","sources":["../src/common.js","../src/index.js"],"sourcesContent":["export function preload(imageURLs) {\n    const images = [];\n    let count = 0,\n        doneAction = function () {},\n        progressAction = function () {};\n\n    imageURLs = (typeof imageURLs != 'object') ? [imageURLs] : imageURLs;\n\n    imageURLs.length === 0 && doneAction(images);\n\n    imageURLs.map((image, i) => {\n        images[i] = new Image();\n        images[i].src = image;\n        images[i].onload = imageLoad;\n        images[i].onerror = imageLoad;\n    });\n\n    function imageLoad() {\n        progressAction((count + 1) * 100 / images.length, images[count]);\n        count++;\n        if (count == imageURLs.length) doneAction(imageURLs.length === 1 ? images[0] : images);\n    }\n\n    return {\n        done() {\n            doneAction = arguments[0] || doneAction;\n        },\n        progress() {\n            progressAction = arguments[0] || progressAction;\n        },\n    };\n}\n\nexport function getSize(node) {\n    if (!node.tagName) return console.log('Invalid element.');\n\n    const name = node.tagName;\n    const type = name === 'IMG' ? 'image' : (name === 'CANVAS' ? 'canvas' : 'normal');\n\n    const result = {\n        image: {\n            width: node.naturalWidth,\n            height: node.naturalHeight,\n        },\n        canvas: {\n            width: node.width,\n            height: node.height,\n        },\n        normal: {\n            width: node.offsetWidth,\n            height: node.offsetHeight,\n        },\n    };\n\n    return result[type];\n}\n\nexport function getCoordinate(canvas, imageSize, position) {\n    const POSITION_STRING = ['center', 'left-top', 'right-top', 'right-bottom', 'left-bottom'];\n    if (!POSITION_STRING.includes(position)) console.log(`Invalid position string.\\nExcept [${POSITION_STRING}]`);\n\n    const { width: imageWidth, height: imageHeight } = imageSize;\n    const { width: canvasWidth, height: canvasHeight } = canvas;\n    const offsetX = canvasWidth - imageWidth;\n    const offsetY = canvasHeight - imageHeight;\n    const result = {\n        [POSITION_STRING[0]]: {\n            x: offsetX / 2,\n            y: offsetY / 2,\n        },\n        [POSITION_STRING[1]]: {\n            x: 0,\n            y: 0,\n        },\n        [POSITION_STRING[2]]: {\n            x: offsetX,\n            y: 0,\n        },\n        [POSITION_STRING[3]]: {\n            x: offsetX,\n            y: offsetY,\n        },\n        [POSITION_STRING[4]]: {\n            x: 0,\n            y: offsetY,\n        },\n    };\n\n    return result[position];\n}\n","import { preload, getSize, getCoordinate } from 'common';\n\nexport default function sketch() {\n    if (!(this instanceof sketch)) return new sketch(...arguments);\n    this.init(...arguments);\n}\n\nsketch.prototype.init = function () {\n    const [width, height] = arguments;\n\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n    this.width = width;\n    this.height = height;\n    this.sprites = [];\n    this.actions = [];\n};\n\nsketch.prototype.import = function (imageURL) {\n    this.actions.push(() => {\n        preload(imageURL).done(image => {\n            const { width, height } = getSize(image);\n            this.canvas.width = this.width || width;\n            this.canvas.height = this.height || height;\n            this.context.drawImage(image, 0, 0);\n            this.next();\n        });\n    });\n    return this;\n};\n\nsketch.prototype.push = function (options = {}) {\n    const { position } = options;\n\n    this.actions.push(() => {\n        preload(options.image).done(image => {\n            const imageSize = getSize(image);\n            const type = typeof position;\n            if (type === 'string') {\n                const coordinate = getCoordinate(this.canvas, imageSize, position);\n                this.context.drawImage(image, 0, 0, imageSize.width, imageSize.height, coordinate.x, coordinate.y, imageSize.width, imageSize.height);\n            } else if(type == 'object') {\n                const rotate = position.rotate || 0;\n                const coordinate = {\n                    x: position.x || 0,\n                    y: position.y || 0,\n                };\n                const spriteCanvas = document.createElement('canvas');\n                const spriteContext = spriteCanvas.getContext('2d');\n\n                spriteCanvas.width = imageSize.width;\n                spriteCanvas.height = imageSize.height;\n\n                spriteContext.translate(spriteCanvas.width / 2, spriteCanvas.height / 2);\n                spriteContext.rotate(rotate * Math.PI / 180);\n                spriteContext.translate(-spriteCanvas.width / 2, -spriteCanvas.height / 2);\n                spriteContext.drawImage(image, spriteCanvas.width / 2 - image.width / 2, spriteCanvas.height / 2 - image.height / 2);\n                spriteContext.translate(spriteCanvas.width / 2, spriteCanvas.height / 2);\n                spriteContext.rotate(-rotate * Math.PI / 180);\n                spriteContext.translate(-spriteCanvas.width / 2, -spriteCanvas.height / 2);\n\n                this.context.drawImage(spriteCanvas, 0, 0, spriteCanvas.width, spriteCanvas.height, coordinate.x, coordinate.y, spriteCanvas.width, spriteCanvas.height);\n            } else {\n                console.log('`options.position` should be a string or object');\n            }\n            this.next();\n        });\n    });\n    return this;\n};\n\nsketch.prototype.next = function () {\n    this.actions.length === 0 ? this.done() : this.actions.shift()();\n};\n\nsketch.prototype.export = function (output) {\n    this.done = () => output(this.canvas.toDataURL('image/jpeg'));\n    this.next();\n};\n"],"names":["const","let","this","coordinate"],"mappings":"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"}