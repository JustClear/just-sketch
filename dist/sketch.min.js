!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define("sketch",i):t.sketch=i()}(this,function(){"use strict";function t(t,i){function o(){++r==t.length&&i(e)}var e=[],r=0;0===(t="object"!=(void 0===t?"undefined":n(t))?[t]:t).length&&i(e),t.map(function(t){var i=new Image;i.src=t,i.crossOrigin="*",i.addEventListener("load",o),i.addEventListener("error",o),e.push(i)})}function i(){if(!(this instanceof i))return new(Function.prototype.bind.apply(i,[null].concat(Array.prototype.slice.call(arguments))));this.init.apply(this,arguments)}var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o=function(){function t(t,i){var n=[],o=!0,e=!1,r=void 0;try{for(var a,h=t[Symbol.iterator]();!(o=(a=h.next()).done)&&(n.push(a.value),!i||n.length!==i);o=!0);}catch(t){e=!0,r=t}finally{try{!o&&h.return&&h.return()}finally{if(e)throw r}}return n}return function(i,n){if(Array.isArray(i))return i;if(Symbol.iterator in Object(i))return t(i,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();return i.prototype.init=function(){var t=Array.prototype.slice.call(arguments),i=t[0],n=t[1];"number"==typeof i&&"number"==typeof n&&(this.width=i,this.height=n),this.symbols=[],this.catch=function(){}},i.prototype.initCanvas=function(t,i){return this.canvas=document.createElement("canvas"),this.canvas.width=t,this.canvas.height=i,this.ctx=this.canvas.getContext("2d"),this.ctx},i.prototype.import=function(t){return"string"==typeof t?this.background=t:console.log(".import(): import unknown type."),this},i.prototype.join=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof t?(i.image=t,this.symbols.push(i)):console.log(".join(): join unknown type."),this},i.prototype.export=function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};return t(this.background,function(r){var a=o(r,1)[0];n.width=n.width||a.naturalWidth,n.height=n.height||a.naturalHeight;var h=n.initCanvas(n.width,n.height);h.drawImage(a,0,0,n.width,n.height),t(n.symbols.map(function(t){return t.image}),function(t){t.map(function(t,i){var o=n.symbols[i],e=o.top,r=o.right,a=o.bottom,s=o.left,c=void 0,u=void 0,d=void 0,l=void 0;o.ratio=t.naturalHeight/t.naturalWidth,o.width&&void 0==o.height?u=(c=o.width)*o.ratio:o.height&&void 0==o.width?c=(u=o.height)/o.ratio:o.width&&o.height?(c=o.width,u=o.height):void 0==o.height&&void 0==o.width?(c=t.naturalWidth,u=t.naturalHeight):console.log("joined symbol size error"),s&&e?(d=s,l=e):s&&a?(d=s,l=n.height-(u+a)):r&&e?(d=n.width-(c+r),l=e):r&&a?(d=n.width-(c+r),l=n.height-(u+a)):console.log("symbol position error: only adjacent sides position are accepted"),d=d||0,l=l||0,h.drawImage(t,0,0,t.naturalWidth,t.naturalHeight,d,l,c,u)});try{e(n.canvas.toDataURL(i.imageType||"image/jpeg"),h,n.canvas)}catch(t){setTimeout(function(){return n.catch(t)},0)}})}),this},i});
//# sourceMappingURL=sketch.min.js.map
