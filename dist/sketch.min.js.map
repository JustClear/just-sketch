{"version":3,"file":"sketch.min.js","sources":["../src/common.js","../src/index.js"],"sourcesContent":["export function preload(imageURLs, done) {\n    const images = [];\n    let count = 0;\n    imageURLs = (typeof imageURLs != 'object') ? [imageURLs] : imageURLs;\n\n    imageURLs.length === 0 && done(images);\n\n    imageURLs.map(imageURL => {\n        const image = new Image();\n        image.src = imageURL;\n        image.crossOrigin = '*';\n        image.addEventListener('load', imageOnLoad);\n        image.addEventListener('error', imageOnLoad);\n        images.push(image);\n    });\n\n    function imageOnLoad() {\n        count ++;\n        if (count == imageURLs.length) done(images);\n    }\n}\n","import { preload } from './common';\n\nexport default function sketch() {\n    if (!(this instanceof sketch)) return new sketch(...arguments);\n    this.init(...arguments);\n}\n\nsketch.prototype.init = function () {\n    const [width, height] = arguments;\n\n    if (typeof width === 'number' && typeof height === 'number') {\n        this.width = width;\n        this.height = height;\n    }\n\n    this.symbols = [];\n    this.catch = function() {};\n};\n\nsketch.prototype.initCanvas = function (width, height) {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext('2d');\n    return this.ctx;\n};\n\nsketch.prototype.import = function (image) {\n    if (typeof image === 'string') {\n        this.background = image;\n    } else {\n        console.log('.import(): import unknown type.');\n    }\n    return this;\n};\n\nsketch.prototype.join = function (image = '', options = {}) {\n    if (typeof image === 'string') {\n        options.image = image;\n        this.symbols.push(options);\n    } else {\n        console.log('.join(): join unknown type.');\n    }\n    return this;\n};\n\nsketch.prototype.rect = function (options = {}) {\n    options.type = 'rect';\n    this.symbols.push(options);\n    return this;\n};\n\nsketch.prototype.export = function (output = function () {}) {\n    preload(this.background, ([background]) => {\n        this.width = this.width || background.naturalWidth;\n        this.height = this.height || background.naturalHeight;\n        this.initCanvas(this.width, this.height);\n        this.ctx.drawImage(background, 0, 0, this.width, this.height);\n\n        preload(this.symbols.map(symbol => symbol.image || ''), (images) => {\n            images.map((image, index) => {\n                const option = this.symbols[index];\n                const { top = 0, right = 0, bottom = 0, left = 0 } = option;\n                let width, height, offsetX, offsetY;\n                option.ratio = image.naturalHeight / image.naturalWidth;\n                if (option.width && option.height == undefined) {\n                    width = option.width;\n                    height = width * option.ratio;\n                } else if (option.height && option.width == undefined) {\n                    height = option.height;\n                    width = height / option.ratio;\n                } else if (option.width && option.height) {\n                    width = option.width;\n                    height = option.height;\n                } else if (option.height == undefined && option.width == undefined) {\n                    width = image.naturalWidth;\n                    height = image.naturalHeight;\n                } else {\n                    console.log('joined symbol size error');\n                }\n                if (left !== 0 && top !== 0) {\n                    offsetX = left;\n                    offsetY = top;\n                } else if (left !== 0 && bottom !== 0) {\n                    offsetX = left;\n                    offsetY = this.height - (height + bottom);\n                } else if (right !== 0 && top !== 0) {\n                    offsetX = this.width - (width + right);\n                    offsetY = top;\n                } else if (right !== 0 && bottom !== 0) {\n                    offsetX = this.width - (width + right);\n                    offsetY = this.height - (height + bottom);\n                } else {\n                    console.log('symbol position error: only adjacent sides position are accepted');\n                }\n                width = width || 0;\n                height = height || 0;\n                offsetX = offsetX || 0;\n                offsetY = offsetY || 0;\n                if (option.type == 'rect') {\n                    if (option.backgroundColor) {\n                        this.ctx.fillStyle = option.backgroundColor || '#000';\n                        this.ctx.fillRect(offsetX + option.borderWidth, offsetY + option.borderWidth, width, height);\n                    }\n                    if (option.borderWidth) {\n                        this.ctx.beginPath();\n                        this.ctx.lineWidth = option.borderWidth;\n                        this.ctx.strokeStyle = option.borderColor || '#000';\n                        this.ctx.rect(offsetX + option.borderWidth, offsetY + option.borderWidth, width, height);\n                        this.ctx.stroke();\n                    }\n                } else {\n                    this.ctx.drawImage(image, 0, 0, image.naturalWidth, image.naturalHeight, offsetX , offsetY , width, height);\n                }\n            });\n            try {\n                output(this.canvas.toDataURL(`image/${sketch.imageType || 'jpeg'}`), this.ctx, this.canvas);\n            } catch (error) {\n                setTimeout(() => this.catch(error), 0);\n            }\n        });\n    });\n    return this;\n};\n"],"names":["preload","imageURLs","done","imageOnLoad","length","images","count","map","image","Image","src","imageURL","crossOrigin","addEventListener","push","sketch","this","arguments","init","prototype","width","height","symbols","catch","initCanvas","canvas","document","createElement","ctx","getContext","import","background","log","join","options","rect","type","export","output","_this","naturalWidth","naturalHeight","drawImage","symbol","index","option","top","right","bottom","left","offsetX","offsetY","ratio","undefined","backgroundColor","fillStyle","fillRect","borderWidth","beginPath","lineWidth","strokeStyle","borderColor","stroke","toDataURL","imageType","error"],"mappings":"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"}